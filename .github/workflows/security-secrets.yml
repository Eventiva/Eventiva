name: Security - GitGuardian scan

on:
  merge_group:
  push:
    branches:
      - main
      - develop
      - release/*
  pull_request:
    branches:
      - main
      - develop
      - release/*

permissions:
  contents: read

jobs:
  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.6.1 # v2.6.1
        with:
          egress-policy: audit

      - name: Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2.0.0 # v1.8.7
        with:
          github_token: ${{ secrets.BOT_TOKEN || github.token }}
          comment_on_pr: false
          theme: dark
          proc_trace_sys_enable: true

      # checks out the repository
      - uses: actions/checkout@v4.1.2
        with:
          submodules: 'recursive'
          token: "${{ secrets.BOT_TOKEN || github.token }}"

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.BOT_GIT_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # ensure git is using the ssh key
      - name: Ensure git is using the SSH key
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-add -l | grep -q "$(ssh-keygen -lf ~/.ssh/id_rsa | awk '{print $2}')" || (echo "Failed to add SSH key" && exit 1)

      # setup git to use the ssh key
      - name: Setup git & npm
        run: |
          git config --global user.name ${{secrets.GIT_USER_NAME}}
          git config --global user.email ${{secrets.GIT_USER_EMAIL}}
          git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=~/.ssh/known_hosts"
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/id_rsa
          git config --global commit.gpgsign true
          git config --global tag.gpgsign true

      - name: Setup NPM Registry
        run: |
          npm config set '@bit:registry' https://node-registry.bit.cloud
          npm config set '@teambit:registry' https://node-registry.bit.cloud
          npm config set '@eventiva:registry' https://node-registry.bit.cloud
          npm config set //node-registry.bit.cloud/:_authToken ${{ secrets.BIT_CONFIG_USER_TOKEN }}

      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret # main
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || github.token }}
